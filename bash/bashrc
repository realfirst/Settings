# -*- mode:shell-script -*-

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=no

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# ##################################################
# Basic GIT settings
# ##################################################
export GIT_EDITOR="vim"
export LESSCHARSET=utf-8
if [ -f ~/.git-completion.bash ]; then
    . ~/.git-completion.bash
fi

export SHELL=/bin/bash
export TERM=xterm-256color
# export LC_CTYPE="zh_TW.utf8"
export SCREENRC=$HOME/Settings/screen/screenrc
export PATH="$HOME/local/bin:$HOME/bin:$PATH"

# ##################################################
# Machine-dependent settings
# ##################################################
MNAME=`uname -s | tr '[:upper:]' '[:lower:]'`
case "$MNAME" in
cygwin*)
    MBASHRC=$HOME/Settings/bash/bashrc.cygwin
    ;;
darwin*)
    MBASHRC=$HOME/Settings/bash/bashrc.darwin
    ;;
linux*)
    MBASHRC=$HOME/Settings/bash/bashrc.linux
    ;;
*)
    ;;
esac
if [ -f $MBASHRC ]; then
    echo "***>> Loading $MBASHRC"
    . $MBASHRC
fi

# ###############################################
# Alias definitions.
# ###############################################
# You may want to put all your additions into a separate file
# like ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
   . ~/.bash_aliases
fi

alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'
alias gr='grep -n'
alias cls='clear'
alias scp='scp -Cr'

# alias workspaces='screen -mS work -DR'
if [ -z $EMACS_SERVER_NAME ]; then
    export EMACS_SERVER_NAME=server1
fi
# create aliases for screen workspace
for w in {1..5}
do
    s="server$w"
    alias ws$w="(echo 'setenv EMACS_SERVER_NAME $s'; cat ~/.screenrc) | tee /tmp/.screenrc.$s; screen -c /tmp/.screenrc.$s -mS $s -DR"
done
export EDITOR="emacsclient -s $EMACS_SERVER_NAME -t -a ''"
alias et="$EDITOR"
alias kill-emacs="$EDITOR --eval '(kill-emacs)'"
# in case (MacOS and Cygwin), emacs server can't be started by this way.
alias start-emacs-server="emacs --daemon=$EMACS_SERVER_NAME"

# create dvtm sessions
for s in {1..5}
do
    alias dvtm$s="dtach -A /tmp/dvtm-session-${EMACS_SERVER_NAME}-$s dvtm"
done

# ##################################################
# StarRC remote hosts
# ##################################################
# Citrix server
alias ssh2rc01='ssh starrc01'

# starrc01-starrc03
alias ssh2rc01='ssh starrc01'
alias ssh2rc02='ssh starrc02'
alias ssh2rc03='ssh starrc03'

# stxtopt04, stxtopt05, stxtopt06, stxtopt07, stxtopt08, stxtopt09, stxtopt10, stxtopt11
alias ssh2opt04='ssh stxtopt04'
alias ssh2opt05='ssh stxtopt05'
alias ssh2opt06='ssh stxtopt06'
alias ssh2opt07='ssh stxtopt07'
alias ssh2opt08='ssh stxtopt08'
alias ssh2opt09='ssh stxtopt09'
alias ssh2opt10='ssh stxtopt10'
alias ssh2opt11='ssh stxtopt11'

alias cgrep="find . -type f -iregex '.*\.\(c\|C\|h\|ht\|cpp\)' -print0 | xargs -0 grep --color -n"
alias hgrep="find . -type f -iregex '.*\.\(h\|ht\)' -print0 | xargs -0 grep --color -n"
alias mgrep="find . -regextype posix-egrep -iregex '(.*\/Makefile|.*\/Makefile\..*|.*\.make|.*\.mak|.*\.mk)' -type f -print0 | xargs -0 grep --color -n"
alias sgrep="find . -type f -iregex '.*\.\(c\|C\|h\|cpp\|S\|java\|xml\|sh\|hier\|make\)' -print0 | xargs -0 grep --color -n"
alias jgrep="find . -type f -iregex '.*\.\(java\)' -print0 | xargs -0 grep --color -n"
